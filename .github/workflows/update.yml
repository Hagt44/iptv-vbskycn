name: Sync Upstream Daily  2：00

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install tree
        run: sudo apt-get install -y tree

      - name: Sync with upstream
        run: |
          # 配置 Git
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          
          # 显示同步前的文件结构
          echo "同步前的文件结构："
          tree -a -I '.git'
          
          # 设置上游仓库
          UPSTREAM_REPO="https://github.com/vbskycn/iptv.git"
          git remote add upstream $UPSTREAM_REPO || true
          echo "已添加上游仓库: $UPSTREAM_REPO"
          
          # 获取上游更新
          git fetch upstream
          echo "已获取上游更新"
          
          # 检测上游默认分支
          if git ls-remote --heads upstream main | grep -q main; then
            DEFAULT_BRANCH="main"
            echo "检测到上游默认分支为: main"
          else
            DEFAULT_BRANCH="master"
            echo "检测到上游默认分支为: master"
          fi
          
          # 备份当前的 .github/workflows 目录
          mkdir -p /tmp/workflows_backup
          cp -r .github/workflows/* /tmp/workflows_backup/ 2>/dev/null || true
          
          # 清理除了 .git 和 .github/workflows 之外的所有文件
          find . -mindepth 1 -not -path './.git*' -delete
          
          # 检出上游文件，但排除 .github/workflows
          git checkout upstream/$DEFAULT_BRANCH -- .
          
          # 恢复原来的工作流文件
          mkdir -p .github/workflows
          cp -r /tmp/workflows_backup/* .github/workflows/ 2>/dev/null || true
          rm -rf /tmp/workflows_backup
          
          # 显示同步后的文件结构
          echo "同步后的文件结构："
          tree -a -I '.git'
          
          # 显示更改的文件列表
          echo "更新的文件列表："
          git status --porcelain
          
          # 添加更改（排除工作流文件）
          git add -A
          git reset .github/workflows
          
          # 提交更改
          git commit -m "chore: sync with upstream (excluding workflows)" || true
          echo "已提交更改"
          
          # 推送更改
          git push origin HEAD
          echo "已推送更改"

      - name: Sync status
        if: always()
        run: |
          if [ $? -eq 0 ]; then
            echo "✅ 同步成功完成"
          else
            echo "❌ 同步失败"
          fi
